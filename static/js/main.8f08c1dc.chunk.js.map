{"version":3,"sources":["components/firebase/Firebase.jsx","WithAuthRoute.jsx","components/signing/Signing.jsx","components/signing/Home.jsx","components/tasks/Tasks.jsx","App.js","serviceWorker.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","withRouter","history","useState","setUser","useEffect","currentUser","console","log","push","useStyles","makeStyles","theme","button","marginTop","spacing","marginLeft","root","classes","email","setEmail","pass","setPass","error","setError","register","setRegister","login","useCallback","signInWithEmailAndPassword","then","catch","code","signUp","a","createUserWithEmailAndPassword","res","collection","doc","user","uid","set","className","Grid","container","justify","item","xs","Card","CardActionArea","CardContent","Typography","variant","component","align","color","CardActions","inputs","alignItems","TextField","id","label","onChange","e","target","value","type","Button","size","onClick","textTitle","textTitles","media","width","height","Home","CardMedia","image","title","buttonDelete","background","buttonEdit","textTitleTask","formTask","props","tasks","setTasks","newTask","setNewTask","where","get","data","arrayData","docs","map","getData","noValidate","autoComplete","buttonAdd","newTasks","name","shortid","generate","date","Date","toLocaleString","conection","add","addTask","List","aria-label","ListItem","ListItemIcon","ListItemText","split","pop","signOut","App","firebaseUser","setFirebaseUser","onAuthStateChanged","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8f08c1dc.chunk.js","sourcesContent":["import \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport app from \"firebase/app\";\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA2ZHAKf7EpDqu4Sw9ERDq5q6-efOvCEtY\",\r\n  authDomain: \"skills-depot.firebaseapp.com\",\r\n  databaseURL: \"https://skills-depot.firebaseio.com\",\r\n  projectId: \"skills-depot\",\r\n  storageBucket: \"skills-depot.appspot.com\",\r\n  messagingSenderId: \"123664767865\",\r\n  appId: \"1:123664767865:web:f2e45e918bb18979e5ada8\",\r\n  measurementId: \"G-QGNFN4P0LV\"\r\n  };\r\n  // Initialize Firebase\r\napp.initializeApp(firebaseConfig);\r\nconst db = app.firestore();\r\nconst auth = app.auth();\r\nconst storage = app.storage();\r\n\r\nexport { db, auth, app, storage };","import React, { useEffect, useState } from 'react';\r\nimport { auth, db } from \"../../skills/src/components/firebase/Firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction WithAuthRoute ({ history }) {\r\nconst [user, setUser] = useState(null);\r\n\r\nuseEffect(() => {\r\n  if (auth.currentUser) {\r\n    console.log(\"vive\");\r\n    setUser(auth.currentUser);\r\n    // history.push(\"/Profile\");\r\n  } else {\r\n    console.log(\"no vive\");\r\n    history.push(\"/\");\r\n  }\r\n}, []);\r\nreturn (\r\n    <div>\r\n    </div>\r\n)\r\n}\r\nexport default  withRouter(WithAuthRoute);","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { auth, app, db } from \"../firebase/Firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../../assets/styles/Styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(13),\r\n    marginLeft: theme.spacing(13),\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(15),\r\n  },\r\n}));\r\n\r\nfunction Signing({ history }) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [register, setRegister] = useState(true);\r\n\r\n  \r\n\r\n  const login = useCallback(() => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, pass)\r\n      .then(() => {\r\n        setEmail(\"\");\r\n        setPass(\"\");\r\n        setError(null);\r\n        history.push(\"/Tasks\");\r\n      })\r\n      .catch((error) => {\r\n        switch (error.code) {\r\n          case \"auth/invalid-email\":\r\n            setError(\"El formato del email es incorrecto\");\r\n            break;\r\n          case \"auth/weak-password\":\r\n            setError(\"La contraseña debe ser de mínimo 6 caracteres\");\r\n            break;\r\n          case \"auth/email-already-in-use\":\r\n            setError(\"Este email ya esta en uso\");\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setError(\r\n              \"La contraseña es incorrecta o el usuario no tiene password\"\r\n            );\r\n            break;\r\n          case \"auth/user-not-found\":\r\n            setError(\"Usuario no encontrado\");\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      });\r\n  }, [email, pass, history]);\r\n\r\n  useEffect(() => {\r\n    if (app.auth().currentUser) {\r\n      history.push(\"/Tasks\");\r\n    }\r\n  }, [app.auth().currentUser]);\r\n\r\n  const signUp = useCallback(async() => {\r\n    try{\r\n \r\n      const res = await auth.createUserWithEmailAndPassword(email, pass)\r\n      console.log(res)\r\n      await db.collection('users').doc(res.user.uid).set({\r\n          email: res.user.email,\r\n          uid: res.user.uid\r\n      })\r\n        \r\n        setEmail(\"\");\r\n        setPass(\"\");\r\n        setError(null);\r\n        // const uid = app.auth().currentUser.uid;\r\n        // const getUser = {\r\n        //   email: email,\r\n        //   userName: '',\r\n        //   uid: uid,\r\n        // }\r\n        // db.collection(\"user\").add(getUser);\r\n        history.push(\"/Tasks\");\r\n        console.log(\"Entraste\");\r\n      } catch (error) {\r\n        switch (error.code) {\r\n          case \"auth/invalid-email\":\r\n            setError(\"El formato del email es incorrecto\");\r\n            break;\r\n          case \"auth/weak-password\":\r\n            setError(\"La contraseña debe ser de mínimo 6 caracteres\");\r\n            break;\r\n          case \"auth/email-already-in-use\":\r\n            setError(\"Este email ya esta en uso\");\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setError(\"La contraseña es incorrecta o el usuario no tiene password\");\r\n            break;\r\n          case \"auth/user-not-found\":\r\n            setError(\"Usuario no encontrado\");\r\n            break;\r\n          default:\r\n            return;\r\n      }\r\n   }\r\n  });\r\n\r\n  const signup = () => {\r\n    console.log(\"registar\");\r\n    setRegister(false);\r\n    setError(null);\r\n  };\r\n  const logIn = () => {\r\n    console.log(\"login\");\r\n    setRegister(true);\r\n    setError(null);\r\n  };\r\n  return (\r\n    <div className=\"App container\">\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={10}>\r\n          <Card\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            }}\r\n          >\r\n            {register ? (\r\n              <CardActionArea>\r\n                <CardContent>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"primary\"\r\n                  >\r\n                    <strong>Login</strong>\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            ) : (\r\n              <CardActionArea>\r\n                <CardContent>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"secondary\"\r\n                  >\r\n                    <strong>Register</strong>\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            )}\r\n\r\n            <CardActions\r\n              classes={{\r\n                inputs: classes.inputs, // class name, e.g. `classes-nesting-root-x`\r\n              }}\r\n            >\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                  <AccountCircle />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"e-mail\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardActions>\r\n\r\n            <CardActions>\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                  <LockIcon />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    type=\"password\"\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"password\"\r\n                    onChange={(e) => setPass(e.target.value)}\r\n                    value={pass}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardActions>\r\n            {error && (\r\n              <CardContent>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  component=\"h2\"\r\n                  align=\"center\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <strong>{error}</strong>\r\n                </Typography>\r\n              </CardContent>\r\n            )}\r\n            {register ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.button}\r\n                onClick={login}\r\n              >\r\n                Sing In\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.button}\r\n                onClick={signUp}\r\n              >\r\n                Sing Up\r\n              </Button>\r\n            )}\r\n\r\n            {register ? (\r\n              <CardContent>\r\n                <Typography variant=\"body1\" component=\"h2\" align=\"center\">\r\n                  <strong>Don't have an account? </strong>\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  component=\"h2\"\r\n                  align=\"center\"\r\n                  onClick={signup}\r\n                  color=\"secondary\"\r\n                >\r\n                  <strong>Register Now</strong>\r\n                </Typography>\r\n              </CardContent>\r\n            ) : (\r\n              <CardContent>\r\n                <Typography variant=\"body1\" component=\"h2\" align=\"center\">\r\n                  <strong>Do you have account? </strong>\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  component=\"h2\"\r\n                  align=\"center\"\r\n                  onClick={logIn}\r\n                  color=\"primary\"\r\n                >\r\n                  <strong>Login </strong>\r\n                </Typography>\r\n              </CardContent>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Signing);","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport WithAuthRouter from '../../WithAuthRoute'\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Signing from \"./Signing\";\r\nimport \"../../assets/styles/Styles.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  textTitle: {\r\n    color: \"#fafafa\",\r\n    align: \"center\",\r\n    marginTop: theme.spacing(-10),\r\n    marginLeft: theme.spacing(-2),\r\n  },\r\n  textTitles: {\r\n    color: \"#fafafa\",\r\n    align: \"center\",\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  media: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    marginTop: theme.spacing(6),\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className=\"App container\">\r\n      <WithAuthRouter />\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image=\"https://i.ibb.co/crknqRh/test.png\"\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <Typography variant=\"h5\" align=\"center\" className={classes.textTitle}>\r\n            Welcome!!\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"center\"\r\n            className={classes.textTitles}\r\n          >\r\n            Track your tasks\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Signing />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport WithAuthRoute from \"../../WithAuthRoute\";\r\nimport { auth, app, db } from \"../firebase/Firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\n// import Signing from \"./Signing\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport shortid from \"shortid\";\r\nimport \"../../assets/styles/Styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textTitle: {\r\n    color: \"#fafafa\",\r\n    align: \"center\",\r\n    marginTop: theme.spacing(-6),\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  buttonDelete: {\r\n    background: \"#F71C30\",\r\n    color: \"#FFFFFF\",\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(4),\r\n  },\r\n  buttonEdit: {\r\n    background: \"#FFFF00\",\r\n    color: \"#000000\",\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(4),\r\n  },\r\n  textTitleTask: {\r\n    color: \"#fafafa\",\r\n    align: \"center\",\r\n    marginTop: theme.spacing(5),\r\n    // marginLeft: theme.spacing(4),\r\n  },\r\n  button: {\r\n    // marginTop: theme.spacing(20),\r\n    marginLeft: theme.spacing(17),\r\n  },\r\n  media: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    marginTop: theme.spacing(6),\r\n    marginLeft: theme.spacing(5),\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(3),\r\n    // marginLeft: theme.spacing(5),\r\n  },\r\n  formTask: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(2),\r\n    // marginLeft: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nfunction Tasks({ history, props }) {\r\n  const classes = useStyles();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const uid = app.auth().currentUser.uid;\r\n        // https://firebase.google.com/docs/firestore/query-data/get-data\r\n        // const data = await db.collection(\"user\").doc(uid).get();\r\n        const data = await db.collection(\"tasks\").where(\"uid\", \"==\", uid).get();\r\n        // const data = await db.collection(\"user\").doc(uid).get().get();\r\n        // console.log('data',data.docs);\r\n        const arrayData = data.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        console.log(arrayData);\r\n        setTasks(arrayData);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  \r\n  const addTask = () => {\r\n    const newTasks = {\r\n      name: newTask,\r\n      // email: res.user.email,\r\n      uid: app.auth().currentUser.uid,\r\n      id: shortid.generate(),\r\n      date: new Date().toLocaleString(),\r\n      // item: product,\r\n      // check: payment,\r\n      // totQuantity: totalQuantity,\r\n      // table: table,\r\n      // userName: props.user.user,\r\n      // incomingHour: new Date().toLocaleString(),\r\n      // inicio: +(new Date()),\r\n      // status: \"En preparación\",\r\n      // nameCus: customerName,\r\n      // openClose: \"Abierta\",\r\n      \r\n    };\r\n  //   setTasks([\r\n  //     ...tasks,\r\n  //     {id: data.id, ...newTasks }\r\n  // ])\r\n  const conection = db.collection(\"tasks\").add(newTasks);\r\n  setNewTask( [ \r\n    ...newTask,\r\n    {...newTasks, id: conection.id }\r\n  ])\r\n  setNewTask('')\r\n   \r\n  };\r\n\r\n  const logout = () => {\r\n    auth.signOut().then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n  const openCourses = () => {\r\n    history.push(\"/courses\");\r\n  };\r\n  const openInv = () => {\r\n    history.push(\"/HomeSI\");\r\n  };\r\n  return (\r\n    <div className=\"App container\">\r\n      {/* <WithAuthRoute /> */}\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image=\"https://i.ibb.co/crknqRh/test.png\"\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <Typography variant=\"h5\" align=\"center\" className={classes.textTitle}>\r\n            Track your tasks\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={10}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"left\"\r\n            className={classes.textTitleTask}\r\n          >\r\n            Add Task\r\n          </Typography>\r\n\r\n          <Card\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            }}\r\n          >\r\n            <form className={classes.formTask} noValidate autoComplete=\"off\">\r\n              <TextField id=\"filled-basic\" label=\"Task\" variant=\"filled\" onChange={(e) => setNewTask(e.target.value)}\r\n              value={newTask}/>\r\n            </form>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              className={classes.buttonAdd}\r\n              onClick={() => addTask()}\r\n              \r\n            >\r\n              Add\r\n            </Button>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={10}>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"left\"\r\n            className={classes.textTitleTask}\r\n          >\r\n            List of tasks\r\n          </Typography>\r\n\r\n          <Card\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            }}\r\n          >\r\n            {tasks.map((item) => (\r\n              <List\r\n                component=\"nav\"\r\n                className={classes.root}\r\n                aria-label=\"contacts\"\r\n              >\r\n                <ListItem button>\r\n                  <ListItemIcon>\r\n                    <StarIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>{item.name} </ListItemText>\r\n                  <ListItemText>{item.date.split(\" \").pop()} </ListItemText>\r\n                </ListItem>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.buttonEdit}\r\n                  // onClick={logout}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.buttonDelete}\r\n                  // onClick={logout}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </List>\r\n\r\n              // <li className=\"list-group-item\" key={item.id}>\r\n              //   <span>{item.name}</span>\r\n              //     <button\r\n              //         className=\"btn btn-danger btn-sm float-right\"\r\n              //     >\r\n              //         Eliminar\r\n              //     </button>\r\n              //     <button\r\n              //         className=\"btn btn-warning btn-sm float-right mr-2\"\r\n              //     >\r\n              //         Editar\r\n              //     </button>\r\n              // </li>\r\n            ))}\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        onClick={logout}\r\n      >\r\n        Log Out\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Tasks);\r\n","import React, {useState, useEffect} from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { auth, db } from \"./components/firebase/Firebase\";\nimport Home from './components/signing/Home';\nimport Tasks from './components/tasks/Tasks';\n\nfunction App() {\n  const [firebaseUser, setFirebaseUser] = useState(false);\n  // const [userName, setUserName] = useState(\"\");\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setFirebaseUser(user);\n        console.log('holiii',firebaseUser)\n        // console.log(firebaseUser);\n      } else {\n        setFirebaseUser(null);\n      }\n    });\n    // const getData = async () => {\n    //   try {\n    //     const current = auth.currentUser;\n    //     if (!current) return;\n    //     const uid = current.uid;\n    //     console.log(\"yo merengues\", uid);\n    //     // const data = await db.collection(\"user\").doc(uid).get();\n    //     // console.log(data);\n    //     // const arrayData = { user: data.user, ...data.data() };\n    //     // setUserName(arrayData);\n    //     // console.log(arrayData);\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // };\n    // getData();\n  }, []);\n  return firebaseUser !== false ? (\n    <div >\n    <Router >\n        <Switch>\n          <Route exact path='/' render={() => <Home />} />\n          <Route exact path='/Tasks' render={() => <Tasks />} />\n       \n        </Switch>\n      </Router>\n    </div>\n  ): (\n    <p>Cargando...</p>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}