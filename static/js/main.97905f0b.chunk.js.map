{"version":3,"sources":["components/firebase/Firebase.jsx","components/signing/Signing.jsx","components/signing/Home.jsx","WithAuthRoute.jsx","components/tasks/Tasks.jsx","App.js","serviceWorker.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","useStyles","makeStyles","theme","button","marginTop","spacing","marginLeft","root","withRouter","history","classes","useState","email","setEmail","pass","setPass","error","setError","register","setRegister","useEffect","currentUser","push","login","React","useCallback","a","signInWithEmailAndPassword","console","log","code","signUp","createUserWithEmailAndPassword","className","Grid","container","justify","item","xs","Card","CardActionArea","CardContent","Typography","variant","component","align","color","CardActions","inputs","alignItems","TextField","id","label","onChange","e","target","value","type","Button","size","onClick","textTitle","textTitles","media","width","height","Home","CardMedia","image","title","setUser","signOut","then","App","firebaseUser","setFirebaseUser","onAuthStateChanged","user","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.97905f0b.chunk.js","sourcesContent":["import \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport app from \"firebase/app\";\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA2ZHAKf7EpDqu4Sw9ERDq5q6-efOvCEtY\",\r\n  authDomain: \"skills-depot.firebaseapp.com\",\r\n  databaseURL: \"https://skills-depot.firebaseio.com\",\r\n  projectId: \"skills-depot\",\r\n  storageBucket: \"skills-depot.appspot.com\",\r\n  messagingSenderId: \"123664767865\",\r\n  appId: \"1:123664767865:web:f2e45e918bb18979e5ada8\",\r\n  measurementId: \"G-QGNFN4P0LV\"\r\n  };\r\n  // Initialize Firebase\r\napp.initializeApp(firebaseConfig);\r\nconst db = app.firestore();\r\nconst auth = app.auth();\r\nconst storage = app.storage();\r\n\r\nexport { db, auth, app, storage };","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { auth, app } from \"../firebase/Firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport \"../../assets/styles/Styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    marginTop: theme.spacing(13),\r\n    marginLeft: theme.spacing(13),\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(15),\r\n  },\r\n}));\r\n\r\nfunction Signing({ history }) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [register, setRegister] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (app.auth().currentUser) {\r\n      history.push(\"/Tasks\");\r\n    }\r\n  }, [app.auth().currentUser]);\r\n\r\n  const login = React.useCallback(async () => {\r\n    try {\r\n      const res = await auth.signInWithEmailAndPassword(email, pass);\r\n      setEmail(\"\");\r\n      setPass(\"\");\r\n      setError(null);\r\n      console.log(\"toy dentro\");\r\n      history.push(\"/Tasks\");\r\n    } catch (error) {\r\n      if (error.code === \"auth/invalid-email\") {\r\n        setError(\"Email no registrado\");\r\n      }\r\n      if (error.code === \"auth/user-not-found\") {\r\n        setError(\"Usuario no encontrado\");\r\n      }\r\n      if (error.code === \"auth/wrong-password\") {\r\n        setError(\"ContraseÃ±a incorrecta\");\r\n      }\r\n    }\r\n  }, [email, pass]);\r\n\r\n  const signUp = React.useCallback(async () => {\r\n    try {\r\n      const res = await auth.createUserWithEmailAndPassword(email, pass);\r\n      setEmail(\"\");\r\n      setPass(\"\");\r\n      setError(null);\r\n      console.log(\"toy dentro\");\r\n      history.push(\"/Tasks\");\r\n      //   props.history.push('/Personal')\r\n    } catch (error) {\r\n      if (error.code === \"auth/invalid-email\") {\r\n        setError(\"Email no valido\");\r\n      }\r\n      if (error.code === \"auth/user-not-found\") {\r\n        setError(\"Usuario no encontrado\");\r\n      }\r\n      if (error.code === \"auth/wrong-password\") {\r\n        setError(\"ContraseÃ±a incorrecta\");\r\n      }\r\n      if (error.code === \"auth/weak-password\") {\r\n        setError(\"La contraseÃ±a debe ser de mÃ­nimo 6 caracteres\");\r\n      }\r\n      if (error.code === \"auth/email-already-in-us\") {\r\n        setError(\"Email ya en existe\");\r\n      }\r\n    }\r\n  }, [email, pass]);\r\n\r\n  const signup = () => {\r\n    console.log(\"registar\");\r\n    setRegister(false);\r\n    setError(null);\r\n  };\r\n  const logIn = () => {\r\n    console.log(\"login\");\r\n    setRegister(true);\r\n    setError(null);\r\n  };\r\n  return (\r\n    <div className=\"App container\">\r\n      <Grid container justify=\"center\">\r\n        <Grid item xs={10}>\r\n          <Card\r\n            classes={{\r\n              root: classes.root, // class name, e.g. `classes-nesting-root-x`\r\n            }}\r\n          >\r\n            {register ? (\r\n              <CardActionArea>\r\n                <CardContent>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"primary\"\r\n                  >\r\n                    <strong>Login</strong>\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            ) : (\r\n              <CardActionArea>\r\n                <CardContent>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    align=\"center\"\r\n                    color=\"secondary\"\r\n                  >\r\n                    <strong>Register</strong>\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            )}\r\n\r\n            <CardActions\r\n              classes={{\r\n                inputs: classes.inputs, // class name, e.g. `classes-nesting-root-x`\r\n              }}\r\n            >\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                  <AccountCircle />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"e-mail\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardActions>\r\n\r\n            <CardActions>\r\n              <Grid container spacing={1} alignItems=\"flex-end\">\r\n                <Grid item>\r\n                  <LockIcon />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    type=\"password\"\r\n                    id=\"input-with-icon-grid\"\r\n                    label=\"password\"\r\n                    onChange={(e) => setPass(e.target.value)}\r\n                    value={pass}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </CardActions>\r\n            {error && (\r\n              <CardContent>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  component=\"h2\"\r\n                  align=\"center\"\r\n                  color=\"secondary\"\r\n                >\r\n                  <strong>{error}</strong>\r\n                </Typography>\r\n              </CardContent>\r\n            )}\r\n            {register ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.button}\r\n                onClick={login}\r\n              >\r\n                Sing In\r\n              </Button>\r\n            ) : (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.button}\r\n                onClick={signUp}\r\n              >\r\n                Sing Up\r\n              </Button>\r\n            )}\r\n\r\n            {register ? (\r\n              <CardContent>\r\n                <Typography variant=\"body1\" component=\"h2\" align=\"center\">\r\n                  <strong>Don't have an account? </strong>\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  component=\"h2\"\r\n                  align=\"center\"\r\n                  onClick={signup}\r\n                  color=\"secondary\"\r\n                >\r\n                  <strong>Register Now</strong>\r\n                </Typography>\r\n              </CardContent>\r\n            ) : (\r\n              <CardContent>\r\n                <Typography variant=\"body1\" component=\"h2\" align=\"center\">\r\n                  <strong>Do you have account? </strong>\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"body1\"\r\n                  component=\"h2\"\r\n                  align=\"center\"\r\n                  onClick={logIn}\r\n                  color=\"primary\"\r\n                >\r\n                  <strong>Login </strong>\r\n                </Typography>\r\n              </CardContent>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Signing);","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Signing from \"./Signing\";\r\nimport \"../../assets/styles/Styles.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  textTitle: {\r\n    color: \"#fafafa\",\r\n    align: \"center\",\r\n    marginTop: theme.spacing(-10),\r\n    marginLeft: theme.spacing(-2),\r\n  },\r\n  textTitles: {\r\n    color: \"#fafafa\",\r\n    align: \"center\",\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  media: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n    marginTop: theme.spacing(6),\r\n    marginLeft: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <div className=\"App container\">\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image=\"https://i.ibb.co/crknqRh/test.png\"\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <Typography variant=\"h5\" align=\"center\" className={classes.textTitle}>\r\n            Welcome!!\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"center\"\r\n            className={classes.textTitles}\r\n          >\r\n            Track your tasks\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Signing />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { auth, db } from \"../../skills/src/components/firebase/Firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction WithAuthRoute ({ history }) {\r\nconst [user, setUser] = useState(null);\r\n\r\nuseEffect(() => {\r\n  if (auth.currentUser) {\r\n    console.log(\"vive\");\r\n    setUser(auth.currentUser);\r\n    // history.push(\"/Profile\");\r\n  } else {\r\n    console.log(\"no vive\");\r\n    history.push(\"/\");\r\n  }\r\n}, []);\r\nreturn (\r\n    <div>\r\n    </div>\r\n)\r\n}\r\nexport default  withRouter(WithAuthRoute);","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport WithAuthRoute from \"../../WithAuthRoute\";\r\nimport { auth, app } from \"../firebase/Firebase\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n// import Signing from \"./Signing\";\r\nimport \"../../assets/styles/Styles.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textTitle: {\r\n    color: \"#fafafa\",\r\n    align: \"center\",\r\n    marginTop: theme.spacing(-6),\r\n    marginLeft: theme.spacing(4),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(80),\r\n    marginLeft: theme.spacing(17),\r\n  },\r\n  media: {\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n    marginTop: theme.spacing(6),\r\n    marginLeft: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nfunction Tasks({ history }) {\r\n  const classes = useStyles();\r\n  const logout = () => {\r\n    auth.signOut().then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n  const openCourses = () => {\r\n    history.push(\"/courses\");\r\n  };\r\n  const openInv = () => {\r\n    history.push(\"/HomeSI\");\r\n  };\r\n  return (\r\n    <div className=\"App container\">\r\n      {/* <WithAuthRoute /> */}\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <CardMedia\r\n            className={classes.media}\r\n            image=\"https://i.ibb.co/crknqRh/test.png\"\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <Typography variant=\"h5\" align=\"center\" className={classes.textTitle}>\r\n            Track your tasks\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        className={classes.button}\r\n        onClick={logout}\r\n      >\r\n        Log Out\r\n      </Button>\r\n      {/* <Signing /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Tasks);\r\n","import React, {useState, useEffect} from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport { auth, db } from \"./components/firebase/Firebase\";\nimport Home from './components/signing/Home';\nimport Tasks from './components/tasks/Tasks';\n\nfunction App() {\n  const [firebaseUser, setFirebaseUser] = useState(false);\n  // const [userName, setUserName] = useState(\"\");\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setFirebaseUser(user);\n        console.log('holiii',firebaseUser)\n        // console.log(firebaseUser);\n      } else {\n        setFirebaseUser(null);\n      }\n    });\n    // const getData = async () => {\n    //   try {\n    //     const current = auth.currentUser;\n    //     if (!current) return;\n    //     const uid = current.uid;\n    //     console.log(\"yo merengues\", uid);\n    //     // const data = await db.collection(\"user\").doc(uid).get();\n    //     // console.log(data);\n    //     // const arrayData = { user: data.user, ...data.data() };\n    //     // setUserName(arrayData);\n    //     // console.log(arrayData);\n    //   } catch (error) {\n    //     console.log(error);\n    //   }\n    // };\n    // getData();\n  }, []);\n  return firebaseUser !== false ? (\n    <div >\n    <Router >\n        <Switch>\n          <Route exact path='/' render={() => <Home />} />\n          <Route exact path='/Tasks' render={() => <Tasks />} />\n       \n        </Switch>\n      </Router>\n    </div>\n  ): (\n    <p>Cargando...</p>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}